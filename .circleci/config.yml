version: 2.1
# orbs:
#   # use Cypress orb from CircleCI registry
#   cypress: cypress-io/cypress@1.5.1
commands:
  restore_npm:
    parameters:
      prefix: &cache_key_prefix_parameter
        description: cache key prefix
        type: string
        default: ngx-sample-v9
    steps:
      - run: &echo_env echo "$IMAGE_NAME" > /tmp/env_image_name.txt
      - restore_cache:
          keys:
            - &cache_key << parameters.prefix >>-{{ checksum "/tmp/env_image_name.txt" }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - << parameters.prefix >>-{{ checksum "/tmp/env_image_name.txt" }}-{{ .Branch }}-
            - << parameters.prefix >>-{{ checksum "/tmp/env_image_name.txt" }}-
  save_npm:
    parameters:
      prefix:
        <<: *cache_key_prefix_parameter
      with_cypress:
        description: is cypress flag
        type: boolean
        default: false
    steps:
      - run: *echo_env
      - when:
          condition: << parameters.with_cypress >>
          steps:
            - save_cache:
                key: *cache_key
                paths:
                  - "node_modules"
                  - "/tmp/.cache/Cypress"
      - unless:
          condition: << parameters.with_cypress >>
          steps:
            - save_cache:
                key: *cache_key
                paths:
                  - "node_modules"

  install_dependencies:
    steps:
      - run: apt update && apt install -y default-jre
      - run: apt-get install -y fonts-noto-cjk jq
  store_reports:
    steps:
      - run:
          name: 'merge report'
          command: 'npm run ci:e2e:report:json'
          when: always
      - run:
          name: 'generate html report'
          command: 'npm run ci:e2e:report:html'
          when: always
      - run:
          name: 'generate allure report'
          command: 'npx allure-commandline generate allure-results -o allure-report'
      - store_test_results:
          path: "cypress/results"
          when: always
      - store_artifacts:
          path: "mochawesome.json"
          destination: mochawesome.json
          when: always
      - store_artifacts:
          path: "cypress/videos"
          destination: cypress-videos
          when: always
      - store_artifacts:
          path: "mochawesome-report"
          destination: cypress-html
          when: always
      - store_artifacts:
          path: "cypress/snapshots"
          destination: cypress-snapshots
          when: always
      - store_artifacts:
          path: "allure-report"
          destination: allure-report
          when: always
  comment_to_pr:
    steps:
      - run:
          name: 'Failed!!!'
          command: sh .circleci/e2e_failed.sh
          when: on_fail
executors:
  node:
    docker:
      - image: cypress/base:12.16.1
    environment:
      - CYPRESS_CACHE_FOLDER: /tmp/.cache/Cypress
      - IMAGE_NAME: node
  cypress-cjk:
    docker:
      - image: cypress/base:12.16.1
    environment:
      - CYPRESS_CACHE_FOLDER: /tmp/.cache/Cypress
      ## this enables colors in the output
      - TERM: xterm
      - IMAGE_NAME: cypress
jobs:
  build:
    executor: node
    steps:
      - checkout
      - run: echo "Start Build"
      - restore_npm
      - run: npm install
      - save_npm
      - run: npx ng build --aot --no-progress --base-href '/ngx-sample/'
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - dist
  test:
    executor: node
    steps:
      - checkout
      - restore_npm
      - run: npm install
      - save_npm
      - run: npm run test
  e2e-feature:
    executor: cypress-cjk
    steps:
      - install_dependencies
      - checkout
      - restore_npm
      - run: npm install
      - save_npm:
          with_cypress: true
      - attach_workspace:
          at: cypress
      - run:
          name: 'server start'
          command: 'npm run ci:e2e:server'
          background: true
      - run:
          name: 'cypress'
          command: 'npm run ci:e2e:run:actual'
      - store_reports
      - comment_to_pr
  e2e-master:
    executor: cypress-cjk
    steps:
      - install_dependencies
      - checkout
      # 実行環境のテストのため一時的にコメントアウト
      # - run:
      #     name: 'masterとの比較用checkout'
      #     command: |
      #       git checkout master
      #       git reset --hard origin/master
      - restore_npm
      - run: yarn
      - save_npm:
          with_cypress: true
      - run:
          name: 'server start'
          command: 'yarn run ci:e2e:server'
          background: true
      - run:
          name: 'cypress'
          command: 'yarn run ci:e2e:run:base'
      - persist_to_workspace:
          root: cypress
          paths:
            - snapshots
      - store_reports
  deploy:
    executor: node
    steps:
      - run: echo "Deploy to GitHub Pages"
      - add_ssh_keys:
          fingerprints:
            - "ec:ae:80:b6:bf:07:34:c5:76:1e:26:08:31:fe:c1:ba"
      - checkout
      - restore_npm
      - run: npm install
      - save_npm:
          with_cypress: true
      - run:
          name: 'git config'
          command: |
            git config --global user.email $GITHUB_EMAIL
            git config --global user.name $GITHUB_NAME
      - attach_workspace:
          at: /home/circleci/project
      - run: npm run ngh

workflows:
  version: 2.1
  workflow:
    jobs:
      - e2e-feature:
          requires:
            - e2e-master
          filters:
            branches:
              ignore:
                - master
      - e2e-master
      - build
      - deploy:
          requires:
            - build
            - e2e-master
          filters:
            branches:
              only:
                - master
